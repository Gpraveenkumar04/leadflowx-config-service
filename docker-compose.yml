# LeadFlowX Config Service
# Production-ready configuration with secure defaults

services:
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${DB_NAME:-leadflowx}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-LeadFlowX_SecurePassword_2025!}
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    ports:
      - "5434:5432"
    volumes:
      - config_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - leadflowx-network

  leadflowx-config-service:
    build: 
      context: .
      dockerfile: Dockerfile
    image: ${REGISTRY:-localhost}/leadflowx/config-service:${TAG:-latest}
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-LeadFlowX_SecurePassword_2025!}@postgres:5432/${DB_NAME:-leadflowx}?sslmode=require
      - DB_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-LeadFlowX_SecurePassword_2025!}@postgres:5432/${DB_NAME:-leadflowx}?sslmode=require
      - API_KEY=${API_KEY:-LeadFlowX_API_Key_2025!}
      - MAX_POOL_SIZE=${MAX_POOL_SIZE:-20}
      - IDLE_TIMEOUT=${IDLE_TIMEOUT:-10000}
      - CONNECTION_TIMEOUT=${CONNECTION_TIMEOUT:-5000}
      - PORT=8080
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      replicas: ${CONFIG_SERVICE_REPLICAS:-2}
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - leadflowx-network
  # Remove Kafka and Zookeeper definitions as they are managed by scraper-workers
  # Add service discovery for Kafka
  # Load balancer for config service replicas
  nginx-lb:
    image: nginx:alpine
    ports:
      - "${CONFIG_SERVICE_PORT:-8081}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - leadflowx-config-service
    networks:
      - leadflowx-network
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    container_name: leadflowx-kafka-exporter
    command:
      - --kafka.server=kafka:9092
    ports:
      - "9308:9308"
    networks:
      - leadflowx-network
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  config_postgres_data:
    name: leadflowx_config_postgres_data
  zookeeper_data:
    name: leadflowx_zookeeper_data
  zookeeper_log:
    name: leadflowx_zookeeper_log
  kafka_data:
    name: leadflowx_kafka_data

networks:
  leadflowx-network:
    external: true
    name: leadflowx-network